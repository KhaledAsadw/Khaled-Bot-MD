import { prepareWAMessageMedia, generateWAMessageFromContent, getDevice } from '@whiskeysockets/baileys'

const handler = async (m, { conn, text, usedPrefix: prefijo }) => {
Â Â Â  const device = await getDevice(m.key.id);
    const mentionId = m.key.participant || m.key.remoteJid;

Â Â Â  if (device !== 'desktop' || device !== 'web') {Â Â Â Â Â  
Â Â Â Â Â Â Â  var joanimiimg = await prepareWAMessageMedia({ image: {url: 'https://telegra.ph/file/bb12991fd4345e4a9fb1d.jpg'}}, { upload: conn.waUploadToServer })
Â Â Â Â Â Â Â  const interactiveMessage = {
Â Â Â Â Â Â Â Â Â Â Â  body: { text: `test`.trim() },
Â Â Â Â Â Â Â Â Â Â Â  footer: { text: `Â©khaled for test`.trim() },Â  
Â Â Â Â Â Â Â Â Â Â Â  header: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  title: `test hi @${mentionId.split('@')[0]}`,
                subtitle: `test`,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  hasMediaAttachment: true,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  imageMessage: joanimiimg.imageMessage,
Â Â Â Â Â Â Â Â Â Â Â  },
            nativeFlowMessage: {
  						buttons: [
  							{
  								name: 'single_select',
  						  	buttonParamsJson: JSON.stringify({
  						  		title: 'Click Me',
  						  		sections: [
  						  			{
  						  				title: 'Ø³ØªÙˆðŸ–¤Ù€Ù€Ø±Ù€Ù€Ù€ðŸ–¤Ù€ÙŠÙ€Ø§ØªðŸ™ˆðŸ–¤',
  							  	    highlight_label: 'khaled',
  						  		    rows: [
  						  		    	{
  						  		    		header: 'Ø§Ù‡Ù„Ø§ Ø¨Ùƒ',
  										      title: ' ØªØ­Ù…ÙŠÙ„ Ø§Ù„ØªØ·Ø¨ÙŠÙ‚Ø§Øª ',
  									    	  description: 'Ø§Ø¶ØºØ·',
  								    		  id: '.apk'
  						  		    	}
  						  		    ]
  						  			},
  						  			{
                        title: 'Ø³ØªÙˆðŸ–¤Ù€Ù€Ø±Ù€Ù€Ù€ðŸ–¤Ù€ÙŠÙ€Ø§ØªðŸ™ˆðŸ–¤',
  						  				highlight_label: 'ON',
  						  				rows: [
  						  					{
  						  		    		header: 'Test',
  										      title: 'Click Me',
  									    	  description: 'Click Me',
  								    		  id: 'tes'
  						  		    	}
  						  				]
  						  			},
  						  			{
  						  				highlight_label: 'ON',
  						  				rows: [
  						  					{
  						  		    		header: 'Test',
  										      title: 'Click Me',
  									    	  description: 'Click Me',
  								    		  id: 'te'
  						  		    	}
  						  				]
  						  			}
  						  		]
  						  	})
  							},
                              {
                                  name: 'quick_reply',
                                  buttonParamsJson: JSON.stringify({
                                      display_text: 'Ø§Ù„Ø§ÙˆØ§Ù…Ø±ðŸ–¤ðŸ–¤',
                                      id: `.all`
                                  })
                              },
                              {
                                  name: 'cta_url',
                                  buttonParamsJson: JSON.stringify({
                                      display_text: 'url',
                                      url: 'https://whatsapp.com/channel/0029VaCoD2sAYlUSoRyroy1A',
                                      merchant_url: ''
                             
                                  })
                              }
  			  		],
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  messageParamsJson: ''
Â Â Â Â Â Â Â Â Â Â Â  }
Â Â Â Â Â Â Â  };Â Â Â Â Â Â Â  

Â Â Â Â Â Â Â  let msg = generateWAMessageFromContent(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â  viewOnceMessage: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  message: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  interactiveMessage,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â  }, { userJid: conn.user.jid, quoted: m })
        msg.message.viewOnceMessage.message.interactiveMessage.contextInfo = { mentionedJid: [mentionId] };
        conn.relayMessage(m.chat, msg.message, { messageId: msg.key.id });

Â Â Â  } else {
Â Â Â Â Â Â Â  conn.sendFile(m.chat, 'JoAnimiâ€¢Error.jpg', m);Â Â Â Â Â  
Â Â Â  }Â Â Â  
};
handler.help = ['imgboton'];
handler.tags = ['For Test'];
handler.command = /^(khaled|menu|Ø§Ù„Ø§ÙˆØ§Ù…Ø±)$/i;
export default handler;
